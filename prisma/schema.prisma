generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String            @id @default(cuid())
  name              String
  mobile            String
  company           String
  signInRecords     SignInRecord[]
  documentSignatures DocumentSignature[]
  siteInductions    SiteInduction[]
}

model JobSite {
  id            String        @id @default(cuid())
  name          String
  address       String?
  signInRecords SignInRecord[]
  siteInductions SiteInduction[]
}

model SignInRecord {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  jobSiteId String
  jobSite   JobSite  @relation(fields: [jobSiteId], references: [id])
  action    String   // "in" or "out"
  timestamp DateTime @default(now())
}

model Document {
  id          String              @id @default(cuid())
  title       String
  description String
  pdfUrl      String
  signatures  DocumentSignature[]
}

model DocumentSignature {
  id         String   @id @default(cuid())
  documentId String
  document   Document @relation(fields: [documentId], references: [id])
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  timestamp  DateTime @default(now())
}

model SiteInduction {
  id                           String   @id @default(cuid())
  jobSiteId                    String
  jobSite                     JobSite  @relation(fields: [jobSiteId], references: [id])
  userId                       String
  user                        User     @relation(fields: [userId], references: [id])
  projectManager              String
  inductionDate               DateTime
  contractorCompany           String
  contractorName              String
  jobDescription             String
  usesPlant                  Boolean
  plantInductionDetails      String?
  highRiskWorkLicence        String?
  requiresHotWorks           Boolean
  hotWorksPermitCompleted    Boolean?
  materialsApproval          String
  
  // Terms and Conditions Acknowledgements
  tcSecurityAccess           Boolean
  tcDamageResponsibility     Boolean
  tcRubbishRemoval           Boolean
  tcIncidentReporting        Boolean
  tcSafetyClothing          Boolean
  tcNoSmoking               Boolean
  tcDrugsAlcohol            Boolean
  tcSunSmart                Boolean
  tcFoodWaste               Boolean

  // Behavior Standards Acknowledgements
  bsNoBullying              Boolean
  bsNoTheft                 Boolean
  bsSafetyInstructions      Boolean
  bsSafetyControls          Boolean
  bsScaffolding             Boolean
  bsJoineryProtection       Boolean

  // Competencies
  swmsProvided              Boolean
  constructionInduction     Boolean
  
  // Safety Concerns
  safetyIssuesIdentified    Boolean
  safetyIssuesDescription   String?
  safetyIssuesResolution    String?
  
  // Documents
  whiteCardPhoto            String?
  
  // Health and Safety Briefing
  facilitiesShown           Boolean
  workAreaShown             Boolean
  sanitaryWipesAcknowledged Boolean
  
  // Safety Procedures
  hazardBoardReviewed       Boolean
  ohsPlanLocation           Boolean
  incidentProcedure         Boolean
  emergencyProcedure        Boolean
  ppeProcedure             Boolean
  securityProcedure        Boolean
  questionsAnswered        Boolean

  // Final Acknowledgement
  inducteeSignature        String
  acknowledgement          Boolean
  
  timestamp               DateTime @default(now())
}

